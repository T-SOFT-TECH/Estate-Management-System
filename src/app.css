/* Global styles for the application */

/* Apply a box-sizing model that includes padding and border in the element's total width and height. */
html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}

/* Define CSS variables for theming */
:root {
  --primary-color: #007bff; /* Blue for light mode */
  --secondary-color: #6c757d; /* Gray for light mode */
  --background-color: #ffffff;
  --text-color: #212529; /* Darker text for light mode */
  --heading-color: #1a202c;
  --border-color: #dee2e6;
  --link-color: var(--primary-color);
  --link-hover-color: #0056b3;

  --light-gray: #f8f9fa;
  --medium-gray: #e9ecef;
  --dark-gray: #ced4da;

  /* Button specific variables (optional, can be handled by components or Tailwind) */
  --button-background-color: var(--primary-color);
  --button-text-color: #ffffff;
  --button-hover-background-color: var(--link-hover-color);
}

html.dark {
  --primary-color: #3b82f6; /* A slightly lighter blue for dark mode */
  --secondary-color: #9ca3af; /* Lighter gray for dark mode */
  --background-color: #1f2937; /* Dark gray background */
  --text-color: #d1d5db; /* Light gray text for dark mode */
  --heading-color: #f3f4f6;
  --border-color: #4b5563;
  --link-color: var(--primary-color);
  --link-hover-color: #60a5fa;

  --light-gray: #374151;
  --medium-gray: #4b5563;
  --dark-gray: #6b7280;

  --button-background-color: var(--primary-color);
  --button-text-color: #ffffff;
  --button-hover-background-color: var(--link-hover-color);
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  margin: 0;
  padding: 0;
  background-color: var(--background-color);
  color: var(--text-color);
  line-height: 1.6;
  transition: background-color 0.3s ease, color 0.3s ease; /* Smooth transition */
}

/* Basic link styling */
a {
  color: var(--link-color);
  text-decoration: none;
}

a:hover {
  color: var(--link-hover-color);
  text-decoration: underline;
}

/* Utility class for visually hidden elements (for accessibility) */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* Tailwind specific styles will be handled by Tailwind,
   but you can add global overrides or base styles here. */
/* For example, ensuring headings have a consistent margin or font weight */
h1, h2, h3, h4, h5, h6 {
  margin-top: 1.5rem;
  margin-bottom: 1rem;
  font-weight: 600;
  color: var(--heading-color); /* Use heading color variable */
}

h1 { font-size: 2.25rem; }
h2 { font-size: 1.75rem; }
h3 { font-size: 1.5rem; }

/* Add padding to the main content area - this can also be done in +layout.svelte or specific pages */
/* main {
  padding: 1rem;
} */

/* Ensure images are responsive by default */
img {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Update component-like styles in Nav.svelte and ThemeToggle.svelte to use these variables if they aren't already */
/* For example, the Nav component in Nav.svelte */
/*
nav {
  background-color: var(--light-gray);
  padding: 1rem;
}
html.dark nav {
  background-color: var(--medium-gray); // Or a darker specific color
}
*/

/* The footer in +layout.svelte already uses some of these vars, e.g. var(--light-gray) */
/* The ThemeToggle button has its own scoped styles that could also be updated or use Tailwind classes */
